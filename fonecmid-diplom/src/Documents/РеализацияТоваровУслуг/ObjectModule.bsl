
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

//++__ВКМ 
&НаСервере
Процедура ВыполнитьАвтозаполнение() Экспорт 

	 НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();	
	 НоменклатураНоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	 
	 Если НоменклатураНоменклатураРаботыСпециалиста = Неопределено Тогда 
		 
		 ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура работы специалиста"" не заполнена!");
		 Возврат 
		 
	 КонецЕсли;
	
	  Если НоменклатураАбонентскаяПлата = Неопределено Тогда 
		 
		 ОбщегоНазначения.СообщитьПользователю("Константа ""Номенклатура абонентская плата"" не заполнена!");
		 Возврат;
		 
	 КонецЕсли;
	 
	 Услуги.Очистить();
	 
	 АбонентскаяПлата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
	 
	 Если АбонентскаяПлата > 0 Тогда 
		 
		НоваяСтрока = Услуги.Добавить();
        НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;		
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Сумма = АбонентскаяПлата;
		НоваяСтрока.Цена = АбонентскаяПлата; 
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКоличестваЧасовОборот, 0)) КАК КоличествоЧасов,
		|	СУММА(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0)) КАК Сумма,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор КАК Договор
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(
		|			&ДатаНачалаПериода,
		|			&ДатаОкончанияПериода,
		|			,
		|			Клиент.Ссылка = &Клиент
		|				И Договор.Ссылка = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор";
	
	Запрос.УстановитьПараметр("ДатаНачалаПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончанияПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Клиент", Контрагент); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл    
		
		Если ВыборкаДетальныеЗаписи.Сумма > 0 Тогда
			
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураНоменклатураРаботыСпециалиста;
			НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасов;
			НоваяСтрока.Цена = ВыборкаДетальныеЗаписи.Сумма / ВыборкаДетальныеЗаписи.КоличествоЧасов; 
			НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.Сумма;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры
//--__ВКМ
#КонецОбласти

#КонецЕсли
