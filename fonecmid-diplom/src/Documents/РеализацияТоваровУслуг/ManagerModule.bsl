
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
		
		Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
			
			КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
			КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
			КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
			КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
			
			Возврат КомандаСоздатьНаОсновании;
			
		КонецЕсли;
		
		Возврат Неопределено;
		
	КонецФункции
	
	//++__ВКМ
	Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
		НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
	КонецПроцедуры
	//--__ВКМ
	
	//++__ВКМ
	Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "АктУслуг";
		КомандаПечати.Представление = НСтр("ru = 'Акта об оказанных услугах'");
		КомандаПечати.Порядок = 5;
		
	КонецПроцедуры
	//--__ВКМ
	
	//++__ВКМ
	Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктУслуг");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент = ПечатьАкта(МассивОбъектов, ОбъектыПечати);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акта об оказанных услугах'");
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктУслуг";
		КонецЕсли;
		
	КонецПроцедуры
	//--__ВКМ
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	//++__ВКМ
	Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктУслуг";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктУслуг"); 
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		
		ПервыйДокумент = Истина;
		
		Пока ДанныеДокументов.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				// Все документы нужно выводить на разных страницах.
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиТоварыИУслуги(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиЗаголовокПодвал(ДанныеДокументов, ТабличныйДокумент, Макет);
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);	 
		КонецЦикла; 
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	//--__ВКМ
	
	//++__ВКМ
	Функция ПолучитьДанныеДокументов(МассивОбъектов)
		
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
		|	РеализацияТоваровУслуг.Основание КАК Основание,
		|	РеализацияТоваровУслуг.Комментарий КАК Комментарий,
		|	РеализацияТоваровУслуг.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Товары,
		|	РеализацияТоваровУслуг.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги,
		|	РеализацияТоваровУслуг.Контрагент.Наименование КАК Контрагент,
		|	РеализацияТоваровУслуг.Организация.Наименование КАК Организация,
		|	РеализацияТоваровУслуг.Договор.Наименование КАК Договор,
		|	РеализацияТоваровУслуг.Ответственный.Наименование КАК Ответственный
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Возврат Запрос.Выполнить().Выбрать();
		
	КонецФункции
	//--__ВКМ
	
	//++__ВКМ
	Процедура ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьЗаголовокАкта = Макет.ПолучитьОбласть("ЗаголовокАкта");
		
		ДанныеПечати = Новый Структура;
		НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер, Истина, Истина);
		ДанныеПечати.Вставить("Номер", НомерАкта);
		ДанныеПечати.Вставить("Дата", Формат(ДанныеДокументов.Дата, "ДФ=dd.MM.yyyy")); 
		
		ОбластьЗаголовокАкта.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокАкта);  
				
	КонецПроцедуры 
	
	//++__ВКМ
	Процедура ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьЗаголовокШапка = Макет.ПолучитьОбласть("Шапка"); 
		
		ДанныеПечати = Новый Структура; 
		ДанныеПечати.Вставить("Организация", ДанныеДокументов.Организация);
		ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);      
		ДанныеПечати.Вставить("Договор", ДанныеДокументов.Договор);
		
		ОбластьЗаголовокШапка.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокШапка);  
		
	КонецПроцедуры
	//--__ВКМ   
	
	//++__ВКМ
	Процедура ВывестиТоварыИУслуги(ДанныеДокументов, ТабличныйДокумент, Макет) 
		
		ОбластьЗаголовокТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");  
		ОбластьЗаголовокУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка"); 
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТоварыШапка); 
		
		ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабличныйДокумент.Вывести(ОбластьТовары);
		КонецЦикла;
	
		ТабличныйДокумент.Вывести(ОбластьЗаголовокУслугиШапка); 		
			
		ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
			ТабличныйДокумент.Вывести(ОбластьУслуги);
		КонецЦикла;
		
	КонецПроцедуры
	//--__ВКМ 
	
	//++__ВКМ 
	Процедура ВывестиЗаголовокПодвал(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьЗаголовокПодвал = Макет.ПолучитьОбласть("Подвал"); 
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Основание", ДанныеДокументов.Основание);
		ДанныеПечати.Вставить("Комментарий", ДанныеДокументов.Комментарий);
		ДанныеПечати.Вставить("Ответственный", ДанныеДокументов.Ответственный);
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		СуммаДокументаПрописью = ЧислоПрописью(ДанныеДокументов.СуммаДокумента, ФормСтрока, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		СуммаИтог = СтрШаблон("%1  /  (%2)", ДанныеДокументов.СуммаДокумента, СуммаДокументаПрописью); 

		ДанныеПечати.Вставить("СуммаДокумента", СуммаИтог);
		//
		ОбластьЗаголовокПодвал.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокПодвал); 
		
	КонецПроцедуры
	//--__ВКМ 
	
	#КонецОбласти 
	
#КонецЕсли
